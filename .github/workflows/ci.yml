name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install backend dependencies
      run: |
        cd backend
        pip install -r requirements.txt
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        pip install -r requirements.txt
    
    - name: Run basic validation
      run: |
        echo "Validation passed"

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push backend
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: karimaji143/backend:latest
    
    - name: Build and push frontend
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: karimaji143/frontend:latest
    
    - name: Build and push logger
      uses: docker/build-push-action@v4
      with:
        context: ./logger
        push: true
        tags: karimaji143/logger:latest
    
    - name: Send success notification
      if: success()
      run: |
        echo "Deployment successful for commit ${{ github.sha }}"
    
    - name: Send failure notification
      if: failure()
      run: |
        echo "Deployment failed for commit ${{ github.sha }}"
        exit 1

  notify:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: always()  # Runs even if build-and-push fails
    steps:
      - name: Send CI/CD status email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USER }}
          password: ${{ secrets.EMAIL_PASS }}
          from: ${{ secrets.EMAIL_USER }}   
          to: ${{ secrets.EMAIL_TO }}
          subject: "CI/CD Pipeline Status"
          body: "Your DevOps pipeline for python-microservices-devops has completed. Check logs for details."
          secure: true
